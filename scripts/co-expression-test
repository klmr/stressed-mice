#!/usr/bin/env Rscript

sys = modules::import('klmr/sys')

sys$run({
    args = list(te_list = 'data/repeat-quant/genes-ms-vs-co.tsv',
                te_annotation = 'data/annotation/Mus_musculus.GRCm38.75.repeats.gtf',
                p_annotation = 'data/annotation/Mus_musculus.GRCm38.79.gtf',
                de_genes = 'raw/KG_GV_protein_DESeq2.txt',
                plot = 'data/repeat-quant/co-expressiom-ks-cdf.pdf')

    io = modules::import('ebi-predocs/ebits/io')
    modules::import_package('dplyr', attach = TRUE)

    mcols = GenomicRanges::mcols

    te_list = readr::read_tsv(args$te_list)
    te_annotation = rtracklayer::import(args$te_annotation)
    te_annotation = te_annotation[mcols(te_annotation)$Name %in% unique(te_list$Gene)]
    p_annotation = rtracklayer::import(args$p_annotation)
    is_gene = mcols(p_annotation)$type == 'gene'
    is_protein_coding = mcols(p_annotation)$gene_biotype == 'protein_coding'
    chromosomes = GenomeInfoDb::seqlevels(p_annotation)
    chromosomes = grep('^(\\d+|X|Y|M[Tt])$', chromosomes, value = TRUE)
    is_real_chr = as.vector(GenomicRanges::seqnames(p_annotation)) %in% chromosomes
    is_from_ensembl = grepl('ensembl', mcols(p_annotation)$source)
    p_annotation = p_annotation[is_gene & is_protein_coding & is_real_chr & is_from_ensembl]

    # Check for overlap of protein-coding annotation in the region adjacent to
    # TEs.

    windowsize = 100000
    te_annotation = GenomicRanges::promoters(te_annotation, windowsize, windowsize)

    # Filter TEs and protein-coding annotation for DE genes

    alpha = 0.01

    all_tes = te_list$Gene
    de_tes = filter(te_list, padj < alpha, log2FoldChange > 0)$Gene
    non_de_tes = setdiff(all_tes, de_tes)

    de_te_ann = te_annotation[mcols(te_annotation)$Name %in% de_tes]
    non_de_te_ann = te_annotation[mcols(te_annotation)$Name %in% non_de_tes]

    protein_coding_gene_list = io$read_table(args$de_genes) %>%
        tibble::rownames_to_column('Gene')

    all_genes = protein_coding_gene_list$Gene
    de_genes = protein_coding_gene_list %>%
        filter(padj < alpha, log2FoldChange > 0) %>%
        with(Gene)

    de_gene_ann = p_annotation[mcols(p_annotation)$gene_id %in% de_genes]
    all_gene_ann = p_annotation[mcols(p_annotation)$gene_id %in% all_genes]

    # Count overlaps of TE promoters with DE genes, and with all genes. Then
    # perform a KS-test to test whether it’s distinct from background
    # distribution of ratios.

    overlaps = GenomicRanges::countOverlaps

    de_te_ratio = overlaps(de_te_ann, de_gene_ann) / overlaps(de_te_ann, all_gene_ann)
    non_de_te_ratio = overlaps(non_de_te_ann, de_gene_ann) / overlaps(non_de_te_ann, all_gene_ann)

    ratios = bind_rows(data_frame(Ratio = de_te_ratio, TE = 'DE'),
                       data_frame(Ratio = non_de_te_ratio, TE = 'non­DE'))

    modules::import('klmr/ggplots', attach = TRUE)

    p = ggplot(ratios) +
        aes(x = Ratio, group = TE, color = TE) +
        stat_ecdf(size = 1) +
        ggtitle('K-S test of TE co­regulation') +
        labs(x = sprintf('Ratio of DE/all protein­coding genes within %s kb',
                         windowsize / 1000),
             y = 'Cumulative density',
             color = '') +
        scale_color_grey() +
        theme(legend.position = 'bottom',
              text = element_text(family = 'Roboto Condensed'),
              panel.grid.major = element_line())

    ggsave(args$plot, p, width = 4, height = 3)

    ks.test(de_te_ratio, non_de_te_ratio)
})

# vim: ft=r
